"0","# Load required libraries"
"0","library(randomForest)"
"2","randomForest 4.7-1.1
"
"2","Type rfNews() to see new features/changes/bug fixes.
"
"0","library(ggplot2)"
"2","
Attaching package: ‘ggplot2’

"
"2","The following object is masked from ‘package:randomForest’:

    margin

"
"0","# Set a seed for reproducibility"
"0","set.seed(123)"
"0",""
"0","# Generate a random dataset with two features (X1 and X2) and a binary target variable (Y)"
"0","n <- 100"
"0","data <- data.frame("
"0","  X1 = rnorm(n),"
"0","  X2 = rnorm(n),"
"0","  Y = factor(sample(0:1, n, replace = TRUE))"
"0",")"
"0",""
"0","# Split the dataset into training and testing sets"
"0","train_indices <- sample(1:n, 0.8 * n)"
"0","train_data <- data[train_indices, ]"
"0","test_data <- data[-train_indices, ]"
"0",""
"0","# Train a random forest model"
"0","rf_model <- randomForest(Y ~ X1 + X2, data = train_data, ntree = 100)"
"0",""
"0","# Make predictions on the test set"
"0","predictions <- predict(rf_model, newdata = test_data)"
"0",""
"0","# Evaluate model accuracy"
"0","accuracy <- mean(predictions == test_data$Y)"
"0","cat(""Model Accuracy:"", accuracy, ""\n"")"
"1","Model Accuracy:"
"1"," "
"1","0.5"
"1"," "
"1","
"
"0","# Visualize the random forest results"
"0","# Since we have two features, we can create a scatter plot"
"0","ggplot(data, aes(x = X1, y = X2, color = Y)) +"
"0","  geom_point() +"
"0","  geom_point(data = test_data, aes(x = X1, y = X2), color = ""black"", size = 3, alpha = 0.5) +"
"0","  ggtitle(""Random Forest Classification"") +"
"0","  theme_minimal()"
